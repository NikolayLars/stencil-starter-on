/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AdrianComponent {
        "textblockInhalt": string;
    }
    interface AnmeldeformularComponent {
        "titel": string;
    }
    interface CookieComponent {
        "titel": string;
    }
    interface FlipCard {
        "Picture1": string;
        "Picture2": string;
        "Picture3": string;
        "cardescriptionone": string;
        "cardescriptionthree": string;
        "cardescriptiontwo": string;
        "carnameone": string;
        "carnamethree": string;
        "carnametwo": string;
        "plz": string;
    }
    interface HeaderLn {
    }
    interface InfoRaster {
        "imginfolinks": string;
        "imginforechts": string;
        "infdescriptionlinks": string;
        "infdescriptionrechts": string;
        "infotitlelinks": string;
        "infotitlerechts": string;
    }
    interface MapComponent {
        "adress": string;
        "location": string;
        "streetnumber": string;
    }
    interface MellyComponent {
        "img1": string;
        "img2": string;
        "img3": string;
        "img4": string;
        "img5": string;
    }
    interface MenuComponent {
        "label": string;
        "label2": string;
        "label3": string;
        "option1": HTMLElement;
        "option2": HTMLElement;
        "option3": HTMLElement;
    }
    interface MorizComponent {
        "city": string;
        "imageFacebook": string;
        "imageInstagram": string;
        "imageLinkedIn": string;
        "imageMastercard": string;
        "imagePayPal": string;
        "imageTwitter": string;
        "imageVisa": string;
        "imageWhatsapp": string;
        "imageXing": string;
        "imageYouTube": string;
        "plz": string;
        "siteone": string;
        "sites": string;
        "sitethree": string;
        "sitetwo": string;
        "socialMedia": any;
        "street": string;
        "urlone": string;
        "urlthree": string;
        "urltwo": string;
    }
    interface SlideComponent {
    }
    interface TextComponent {
        "position": string;
        "slHeroHeadline": string;
    }
    interface UserCard {
        "picture1": string;
    }
    interface WeatherLn {
    }
}
declare global {
    interface HTMLAdrianComponentElement extends Components.AdrianComponent, HTMLStencilElement {
    }
    var HTMLAdrianComponentElement: {
        prototype: HTMLAdrianComponentElement;
        new (): HTMLAdrianComponentElement;
    };
    interface HTMLAnmeldeformularComponentElement extends Components.AnmeldeformularComponent, HTMLStencilElement {
    }
    var HTMLAnmeldeformularComponentElement: {
        prototype: HTMLAnmeldeformularComponentElement;
        new (): HTMLAnmeldeformularComponentElement;
    };
    interface HTMLCookieComponentElement extends Components.CookieComponent, HTMLStencilElement {
    }
    var HTMLCookieComponentElement: {
        prototype: HTMLCookieComponentElement;
        new (): HTMLCookieComponentElement;
    };
    interface HTMLFlipCardElement extends Components.FlipCard, HTMLStencilElement {
    }
    var HTMLFlipCardElement: {
        prototype: HTMLFlipCardElement;
        new (): HTMLFlipCardElement;
    };
    interface HTMLHeaderLnElement extends Components.HeaderLn, HTMLStencilElement {
    }
    var HTMLHeaderLnElement: {
        prototype: HTMLHeaderLnElement;
        new (): HTMLHeaderLnElement;
    };
    interface HTMLInfoRasterElement extends Components.InfoRaster, HTMLStencilElement {
    }
    var HTMLInfoRasterElement: {
        prototype: HTMLInfoRasterElement;
        new (): HTMLInfoRasterElement;
    };
    interface HTMLMapComponentElement extends Components.MapComponent, HTMLStencilElement {
    }
    var HTMLMapComponentElement: {
        prototype: HTMLMapComponentElement;
        new (): HTMLMapComponentElement;
    };
    interface HTMLMellyComponentElement extends Components.MellyComponent, HTMLStencilElement {
    }
    var HTMLMellyComponentElement: {
        prototype: HTMLMellyComponentElement;
        new (): HTMLMellyComponentElement;
    };
    interface HTMLMenuComponentElement extends Components.MenuComponent, HTMLStencilElement {
    }
    var HTMLMenuComponentElement: {
        prototype: HTMLMenuComponentElement;
        new (): HTMLMenuComponentElement;
    };
    interface HTMLMorizComponentElement extends Components.MorizComponent, HTMLStencilElement {
    }
    var HTMLMorizComponentElement: {
        prototype: HTMLMorizComponentElement;
        new (): HTMLMorizComponentElement;
    };
    interface HTMLSlideComponentElement extends Components.SlideComponent, HTMLStencilElement {
    }
    var HTMLSlideComponentElement: {
        prototype: HTMLSlideComponentElement;
        new (): HTMLSlideComponentElement;
    };
    interface HTMLTextComponentElement extends Components.TextComponent, HTMLStencilElement {
    }
    var HTMLTextComponentElement: {
        prototype: HTMLTextComponentElement;
        new (): HTMLTextComponentElement;
    };
    interface HTMLUserCardElement extends Components.UserCard, HTMLStencilElement {
    }
    var HTMLUserCardElement: {
        prototype: HTMLUserCardElement;
        new (): HTMLUserCardElement;
    };
    interface HTMLWeatherLnElement extends Components.WeatherLn, HTMLStencilElement {
    }
    var HTMLWeatherLnElement: {
        prototype: HTMLWeatherLnElement;
        new (): HTMLWeatherLnElement;
    };
    interface HTMLElementTagNameMap {
        "adrian-component": HTMLAdrianComponentElement;
        "anmeldeformular-component": HTMLAnmeldeformularComponentElement;
        "cookie-component": HTMLCookieComponentElement;
        "flip-card": HTMLFlipCardElement;
        "header-ln": HTMLHeaderLnElement;
        "info-raster": HTMLInfoRasterElement;
        "map-component": HTMLMapComponentElement;
        "melly-component": HTMLMellyComponentElement;
        "menu-component": HTMLMenuComponentElement;
        "moriz-component": HTMLMorizComponentElement;
        "slide-component": HTMLSlideComponentElement;
        "text-component": HTMLTextComponentElement;
        "user-card": HTMLUserCardElement;
        "weather-ln": HTMLWeatherLnElement;
    }
}
declare namespace LocalJSX {
    interface AdrianComponent {
        "textblockInhalt"?: string;
    }
    interface AnmeldeformularComponent {
        "titel"?: string;
    }
    interface CookieComponent {
        "titel"?: string;
    }
    interface FlipCard {
        "Picture1"?: string;
        "Picture2"?: string;
        "Picture3"?: string;
        "cardescriptionone"?: string;
        "cardescriptionthree"?: string;
        "cardescriptiontwo"?: string;
        "carnameone"?: string;
        "carnamethree"?: string;
        "carnametwo"?: string;
        "plz"?: string;
    }
    interface HeaderLn {
    }
    interface InfoRaster {
        "imginfolinks"?: string;
        "imginforechts"?: string;
        "infdescriptionlinks"?: string;
        "infdescriptionrechts"?: string;
        "infotitlelinks"?: string;
        "infotitlerechts"?: string;
    }
    interface MapComponent {
        "adress"?: string;
        "location"?: string;
        "streetnumber"?: string;
    }
    interface MellyComponent {
        "img1"?: string;
        "img2"?: string;
        "img3"?: string;
        "img4"?: string;
        "img5"?: string;
    }
    interface MenuComponent {
        "label"?: string;
        "label2"?: string;
        "label3"?: string;
        "option1"?: HTMLElement;
        "option2"?: HTMLElement;
        "option3"?: HTMLElement;
    }
    interface MorizComponent {
        "city"?: string;
        "imageFacebook"?: string;
        "imageInstagram"?: string;
        "imageLinkedIn"?: string;
        "imageMastercard"?: string;
        "imagePayPal"?: string;
        "imageTwitter"?: string;
        "imageVisa"?: string;
        "imageWhatsapp"?: string;
        "imageXing"?: string;
        "imageYouTube"?: string;
        "plz"?: string;
        "siteone"?: string;
        "sites"?: string;
        "sitethree"?: string;
        "sitetwo"?: string;
        "socialMedia"?: any;
        "street"?: string;
        "urlone"?: string;
        "urlthree"?: string;
        "urltwo"?: string;
    }
    interface SlideComponent {
    }
    interface TextComponent {
        "position"?: string;
        "slHeroHeadline"?: string;
    }
    interface UserCard {
        "picture1"?: string;
    }
    interface WeatherLn {
    }
    interface IntrinsicElements {
        "adrian-component": AdrianComponent;
        "anmeldeformular-component": AnmeldeformularComponent;
        "cookie-component": CookieComponent;
        "flip-card": FlipCard;
        "header-ln": HeaderLn;
        "info-raster": InfoRaster;
        "map-component": MapComponent;
        "melly-component": MellyComponent;
        "menu-component": MenuComponent;
        "moriz-component": MorizComponent;
        "slide-component": SlideComponent;
        "text-component": TextComponent;
        "user-card": UserCard;
        "weather-ln": WeatherLn;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "adrian-component": LocalJSX.AdrianComponent & JSXBase.HTMLAttributes<HTMLAdrianComponentElement>;
            "anmeldeformular-component": LocalJSX.AnmeldeformularComponent & JSXBase.HTMLAttributes<HTMLAnmeldeformularComponentElement>;
            "cookie-component": LocalJSX.CookieComponent & JSXBase.HTMLAttributes<HTMLCookieComponentElement>;
            "flip-card": LocalJSX.FlipCard & JSXBase.HTMLAttributes<HTMLFlipCardElement>;
            "header-ln": LocalJSX.HeaderLn & JSXBase.HTMLAttributes<HTMLHeaderLnElement>;
            "info-raster": LocalJSX.InfoRaster & JSXBase.HTMLAttributes<HTMLInfoRasterElement>;
            "map-component": LocalJSX.MapComponent & JSXBase.HTMLAttributes<HTMLMapComponentElement>;
            "melly-component": LocalJSX.MellyComponent & JSXBase.HTMLAttributes<HTMLMellyComponentElement>;
            "menu-component": LocalJSX.MenuComponent & JSXBase.HTMLAttributes<HTMLMenuComponentElement>;
            "moriz-component": LocalJSX.MorizComponent & JSXBase.HTMLAttributes<HTMLMorizComponentElement>;
            "slide-component": LocalJSX.SlideComponent & JSXBase.HTMLAttributes<HTMLSlideComponentElement>;
            "text-component": LocalJSX.TextComponent & JSXBase.HTMLAttributes<HTMLTextComponentElement>;
            "user-card": LocalJSX.UserCard & JSXBase.HTMLAttributes<HTMLUserCardElement>;
            "weather-ln": LocalJSX.WeatherLn & JSXBase.HTMLAttributes<HTMLWeatherLnElement>;
        }
    }
}
